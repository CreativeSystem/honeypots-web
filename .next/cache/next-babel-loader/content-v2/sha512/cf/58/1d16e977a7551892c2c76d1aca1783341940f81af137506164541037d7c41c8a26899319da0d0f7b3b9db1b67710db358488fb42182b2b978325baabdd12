{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nfunction usePersistedState(key, initialState) {\n  _s();\n\n  var _useState = useState(initialState),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    setState(function () {\n      var storageValue;\n\n      if (true) {\n        storageValue = localStorage.getItem(key);\n      }\n\n      if (storageValue) {\n        return JSON.parse(storageValue);\n      } else {\n        return initialState;\n      }\n    });\n  }, []);\n  useEffect(function () {\n    localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n  return [state, setState];\n}\n\n_s(usePersistedState, \"pdyGCmlY7TRGX76jdogJFnbHPh8=\");\n\nexport default usePersistedState;","map":{"version":3,"sources":["/home/kros/Desktop/www/creative/HoneyPots/honeypots-web/src/hooks/usePersistedState.ts"],"names":["useState","useEffect","usePersistedState","key","initialState","state","setState","storageValue","localStorage","getItem","JSON","parse","setItem","stringify"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAA8D,OAA9D;;AAIA,SAASC,iBAAT,CAA8BC,GAA9B,EAA2CC,YAA3C,EAAyE;AAAA;;AAAA,kBAC7CJ,QAAQ,CAACI,YAAD,CADqC;AAAA,MAChEC,KADgE;AAAA,MACzDC,QADyD;;AAGvEL,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,QAAQ,CAAC,YAAM;AACb,UAAIC,YAAJ;;AACA,gBAAmC;AACjCA,QAAAA,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqBN,GAArB,CAAf;AACD;;AAED,UAAII,YAAJ,EAAkB;AAChB,eAAOG,IAAI,CAACC,KAAL,CAAWJ,YAAX,CAAP;AACD,OAFD,MAEO;AACL,eAAOH,YAAP;AACD;AACF,KAXO,CAAR;AAYD,GAbQ,EAaN,EAbM,CAAT;AAeAH,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,YAAY,CAACI,OAAb,CAAqBT,GAArB,EAA0BO,IAAI,CAACG,SAAL,CAAeR,KAAf,CAA1B;AACD,GAFQ,EAEN,CAACF,GAAD,EAAME,KAAN,CAFM,CAAT;AAIA,SAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACD;;GAvBQJ,iB;;AAyBT,eAAeA,iBAAf","sourcesContent":["import { useState, useEffect, Dispatch, SetStateAction } from \"react\"\n\ntype Response<T> = [T, Dispatch<SetStateAction<T>>]\n\nfunction usePersistedState<T>(key: string, initialState: T): Response<T> {\n  const [state, setState] = useState(initialState)\n\n  useEffect(() => {\n    setState(() => {\n      let storageValue: string\n      if (typeof window !== \"undefined\") {\n        storageValue = localStorage.getItem(key)\n      }\n\n      if (storageValue) {\n        return JSON.parse(storageValue as never)\n      } else {\n        return initialState\n      }\n    })\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state))\n  }, [key, state])\n\n  return [state, setState]\n}\n\nexport default usePersistedState\n"]},"metadata":{},"sourceType":"module"}