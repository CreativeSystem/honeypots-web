{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kros/Desktop/www/creative/HoneyPots/honeypots-web/src/components/Text/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport useColor from \"@/hooks/useColor\";\nimport useFontSize from \"@/hooks/useFontSize\";\n\nconst Text = (_ref) => {\n  let {\n    as: Component = \"p\",\n    size = \"text.md\",\n    colorKey = \"smokyBlack\",\n    fontWeight = \"normal\",\n    children,\n    style\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"as\", \"size\", \"colorKey\", \"fontWeight\", \"children\", \"style\"]);\n\n  const color = useColor(colorKey);\n  const fontSize = useFontSize(size);\n  return /*#__PURE__*/_jsxDEV(Component, _objectSpread(_objectSpread({\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      fontWeight,\n      color,\n      fontSize\n    })\n  }, props), {}, {\n    children: children\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Text;","map":{"version":3,"sources":["/home/kros/Desktop/www/creative/HoneyPots/honeypots-web/src/components/Text/index.tsx"],"names":["useColor","useFontSize","Text","as","Component","size","colorKey","fontWeight","children","style","props","color","fontSize"],"mappings":";;;;;;;;;;;;;AAEA,OAAOA,QAAP,MAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;AAYA,MAAMC,IAAyB,GAAG,UAQ5B;AAAA,MAR6B;AACjCC,IAAAA,EAAE,EAAEC,SAAS,GAAG,GADiB;AAEjCC,IAAAA,IAAI,GAAG,SAF0B;AAGjCC,IAAAA,QAAQ,GAAG,YAHsB;AAIjCC,IAAAA,UAAU,GAAG,QAJoB;AAKjCC,IAAAA,QALiC;AAMjCC,IAAAA;AANiC,GAQ7B;AAAA,MADDC,KACC;;AACJ,QAAMC,KAAK,GAAGX,QAAQ,CAACM,QAAD,CAAtB;AACA,QAAMM,QAAQ,GAAGX,WAAW,CAACI,IAAD,CAA5B;AACA,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,kCAAOI,KAAP;AAAcF,MAAAA,UAAd;AAA0BI,MAAAA,KAA1B;AAAiCC,MAAAA;AAAjC;AAAhB,KAAiEF,KAAjE;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhBD;;AAkBA,eAAeN,IAAf","sourcesContent":["import { HTMLAttributes } from \"react\"\n\nimport useColor from \"@/hooks/useColor\"\nimport useFontSize from \"@/hooks/useFontSize\"\nimport { ColorsType, FontSizeType } from \"@/styles/theme\"\n\nexport interface TextProps<As extends React.ElementType = React.ElementType>\n  extends HTMLAttributes<As> {\n  as?: As\n  size?: FontSizeType\n  colorKey?: ColorsType\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  fontWeight?: \"initial\" | \"bold\" | \"normal\" | (number & {})\n}\n\nconst Text: React.FC<TextProps> = ({\n  as: Component = \"p\",\n  size = \"text.md\",\n  colorKey = \"smokyBlack\",\n  fontWeight = \"normal\",\n  children,\n  style,\n  ...props\n}) => {\n  const color = useColor(colorKey)\n  const fontSize = useFontSize(size)\n  return (\n    <Component style={{ ...style, fontWeight, color, fontSize }} {...props}>\n      {children}\n    </Component>\n  )\n}\n\nexport default Text\n"]},"metadata":{},"sourceType":"module"}