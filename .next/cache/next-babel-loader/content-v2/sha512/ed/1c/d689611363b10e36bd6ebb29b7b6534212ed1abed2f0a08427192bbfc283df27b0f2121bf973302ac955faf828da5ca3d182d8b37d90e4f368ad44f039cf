{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/home/kros/Desktop/www/creative/HoneyPots/honeypots-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/home/kros/Desktop/www/creative/HoneyPots/honeypots-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/kros/Desktop/www/creative/HoneyPots/honeypots-web/src/components/Text/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport useColor from \"@/hooks/useColor\";\nimport useFontSize from \"@/hooks/useFontSize\";\n\nvar Text = function Text(_ref) {\n  _s();\n\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? \"p\" : _ref$as,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? \"text.md\" : _ref$size,\n      _ref$colorKey = _ref.colorKey,\n      colorKey = _ref$colorKey === void 0 ? \"smokyBlack\" : _ref$colorKey,\n      _ref$fontWeight = _ref.fontWeight,\n      fontWeight = _ref$fontWeight === void 0 ? \"normal\" : _ref$fontWeight,\n      children = _ref.children,\n      style = _ref.style,\n      props = _objectWithoutProperties(_ref, [\"as\", \"size\", \"colorKey\", \"fontWeight\", \"children\", \"style\"]);\n\n  var color = useColor(colorKey);\n  var fontSize = useFontSize(size);\n  return /*#__PURE__*/_jsxDEV(Component, _objectSpread(_objectSpread({\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      fontWeight: fontWeight,\n      color: color,\n      fontSize: fontSize\n    })\n  }, props), {}, {\n    children: children\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Text, \"vfJ8y+SW8MgiG6L5hvnKWEWL9m4=\", false, function () {\n  return [useColor, useFontSize];\n});\n\n_c = Text;\nexport default Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"sources":["/home/kros/Desktop/www/creative/HoneyPots/honeypots-web/src/components/Text/index.tsx"],"names":["useColor","useFontSize","Text","as","Component","size","colorKey","fontWeight","children","style","props","color","fontSize"],"mappings":";;;;;;;;;;;;AAEA,OAAOA,QAAP,MAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;AAYA,IAAMC,IAAyB,GAAG,SAA5BA,IAA4B,OAQ5B;AAAA;;AAAA,qBAPJC,EAOI;AAAA,MAPAC,SAOA,wBAPY,GAOZ;AAAA,uBANJC,IAMI;AAAA,MANJA,IAMI,0BANG,SAMH;AAAA,2BALJC,QAKI;AAAA,MALJA,QAKI,8BALO,YAKP;AAAA,6BAJJC,UAII;AAAA,MAJJA,UAII,gCAJS,QAIT;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADDC,KACC;;AACJ,MAAMC,KAAK,GAAGX,QAAQ,CAACM,QAAD,CAAtB;AACA,MAAMM,QAAQ,GAAGX,WAAW,CAACI,IAAD,CAA5B;AACA,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,kCAAOI,KAAP;AAAcF,MAAAA,UAAU,EAAVA,UAAd;AAA0BI,MAAAA,KAAK,EAALA,KAA1B;AAAiCC,MAAAA,QAAQ,EAARA;AAAjC;AAAhB,KAAiEF,KAAjE;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAhBD;;GAAMN,I;UASUF,Q,EACGC,W;;;KAVbC,I;AAkBN,eAAeA,IAAf","sourcesContent":["import { HTMLAttributes } from \"react\"\n\nimport useColor from \"@/hooks/useColor\"\nimport useFontSize from \"@/hooks/useFontSize\"\nimport { ColorsType, FontSizeType } from \"@/styles/theme\"\n\nexport interface TextProps<As extends React.ElementType = React.ElementType>\n  extends HTMLAttributes<As> {\n  as?: As\n  size?: FontSizeType\n  colorKey?: ColorsType\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  fontWeight?: \"initial\" | \"bold\" | \"normal\" | (number & {})\n}\n\nconst Text: React.FC<TextProps> = ({\n  as: Component = \"p\",\n  size = \"text.md\",\n  colorKey = \"smokyBlack\",\n  fontWeight = \"normal\",\n  children,\n  style,\n  ...props\n}) => {\n  const color = useColor(colorKey)\n  const fontSize = useFontSize(size)\n  return (\n    <Component style={{ ...style, fontWeight, color, fontSize }} {...props}>\n      {children}\n    </Component>\n  )\n}\n\nexport default Text\n"]},"metadata":{},"sourceType":"module"}